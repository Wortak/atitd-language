Module RAGatherAnyHerb;

RegionalActivity RAGatherAnyHerb<"Collect Herbs">;

default World.RQSpecificActivitySettingMin[*, RAGatherAnyHerb] = 1;
default World.RQSpecificActivitySettingMax[*, RAGatherAnyHerb] = 40;

subroutine GetTaskDescription(region) of RAGatherAnyHerb {
	if (IsA(World.RQSpecificActivityType[region, RAGatherAnyHerb], ATFirst)) {
		return (String("First House to gather the enough herbs of any type"));
	}
	if (IsA(World.RQSpecificActivityType[region, RAGatherAnyHerb], ATHouse)) {
		return (String("House to gather the most herbs of any type"));
	}
	if (IsA(World.RQSpecificActivityType[region, RAGatherAnyHerb], ATCoop)) {
		return (String("Gather enough herbs of any type"));
	}

	return ("Unknown Objective [RAGatherAnyHerb]");
}

subroutine PickAsActivity(region) of RAGatherAnyHerb { 
	var result = TRTwister(0, 1);
	if (result) {
		var choice = TRTwister(1, 9);
		if (choice <= 3) {
			PostAssign(World.RQSpecificActivityType[region, RAGatherAnyHerb], ATFirst);
			PostAssign(World.RQWeeklyMax[region, RAGatherAnyHerb], TRTwister(World.RQSpecificActivitySettingMin[region, RAGatherAnyHerb], World.RQSpecificActivitySettingMax[region, RAGatherAnyHerb]) * 100);
		} else if (choice <= 6) {
			PostAssign(World.RQSpecificActivityType[region, RAGatherAnyHerb], ATHouse);
			PostAssign(World.RQWeeklyMax[region, RAGatherAnyHerb], -1);
		} else {
			PostAssign(World.RQSpecificActivityType[region, RAGatherAnyHerb], ATCoop);
			PostAssign(World.RQWeeklyMax[region, RAGatherAnyHerb], TRTwister(World.RQSpecificActivitySettingMin[region, RAGatherAnyHerb], World.RQSpecificActivitySettingMax[region, RAGatherAnyHerb]) * 100);
		}
	}
	return (result);
}

subroutine TriggerActivity(amount, extraData) of RAGatherAnyHerb {
	var region = Actor->GetCurrentRegion();

	if (contains(World.HouseHomeRegions[Actor.House], region)) {
		amount = amount * 2;
	}

	Actor.RAActivityBuffer[RAGatherAnyHerb, region, Actor.House] += amount;
}